name: Run Vitests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [20.x]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm install
    - run: npm run build
    - run: npm test
      env:
        POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
    - name: Run MCP Auto Test
      env:
        POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
      run: |
        node dist/src/index.js --http
        docker run \
          -v "$(pwd)/build/reports/specmatic:/usr/src/app/build/reports/specmatic" \
          -v "$(pwd)/auto_test_dictionary.json:/usr/src/app/dictionary.json" \
          --network host \
          specmatic/specmatic mcp test \
          --url http://localhost:3000 \
          --bearer-token "$POSTMAN_API_KEY" \
          --dictionary-file dictionary.json \
          --skip-tools createCollectionResponse,createMock,createSpecFile,generateSpecFromCollection,getTaggedEntities,getCollection,updateSpecProperties,createCollectionRequest,generateCollection,getMock,getSpecCollections,publishMock,syncCollectionWithSpec,syncSpecWithCollection,createCollectionRequest

